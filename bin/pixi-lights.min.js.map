{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/index","pixi-lights.min.js","src/light_2/WebGLDeferredRenderer.js","src/light_2/lightSpriteMixin.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","PIXI","lighting","WebGLDeferredRenderer","./light_2/WebGLDeferredRenderer","./light_2/lightSpriteMixin",2,"width","height","options","WebGLRenderer","this","viewportRenderTarget","renderTarget","diffuseRenderTarget","normalsRenderTarget","lightsRenderTarget","lights","renderingNormals","_doWebGLRender","prototype","render","Object","create","constructor","assign","_initContext","RenderTarget","gl","resolution","object","_renderLights",3,"tempTexture","Sprite","_renderWebGL","renderer","normalTexture","texture","setObjectRenderer","plugins","sprite"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCAAI,EAAAJ,QAAAK,KAAAC,UAGAC,sBAAAb,EAAA,oCAGAA,EAAA,gCCGGc,kCAAkC,EAAEC,6BAA6B,IAAIC,GAAG,SAAShB,EAAQU,EAAOJ,GCcnG,QAAAO,GAAAI,EAAAC,EAAAC,GAEAR,KAAAS,cAAAb,KAAAc,KAAAJ,EAAAC,EAAAC,GAEAE,KAAAC,qBAAAD,KAAAE,aAEAF,KAAAG,oBAAA,KACAH,KAAAI,oBAAA,KACAJ,KAAAK,mBAAA,KAEAL,KAAAM,UAEAN,KAAAO,kBAAA,EAEAP,KAAAQ,eAAAlB,KAAAS,cAAAU,UAAAC,OAGAlB,EAAAiB,UAAAE,OAAAC,OAAAtB,KAAAS,cAAAU,WACAjB,EAAAiB,UAAAI,YAAArB,EAEAH,EAAAJ,QAAAO,EAGAmB,OAAAG,OAAAtB,EAAAiB,WAIAM,aAAA,WAEAzB,KAAAS,cAAAU,UAAAM,aAAA7B,KAAAc,MAEAA,KAAAG,oBAAA,GAAAb,MAAA0B,aAAAhB,KAAAiB,GAAAjB,KAAAJ,MAAAI,KAAAH,OAAA,KAAAG,KAAAkB,YAAA,GACAlB,KAAAI,oBAAA,GAAAd,MAAA0B,aAAAhB,KAAAiB,GAAAjB,KAAAJ,MAAAI,KAAAH,OAAA,KAAAG,KAAAkB,YAAA,GACAlB,KAAAK,mBAAA,GAAAf,MAAA0B,aAAAhB,KAAAiB,GAAAjB,KAAAJ,MAAAI,KAAAH,OAAA,KAAAG,KAAAkB,YAAA,IAGAR,OAAA,SAAAS,GAQAnB,KAAAO,kBAAA,EAEAP,KAAAQ,eAAAW,IASAC,cAAA,oBDeMC,GAAG,SAAS1C,EAAQU,EAAOJ,GE7FjC,GAAAqC,GAAA,IAQAhC,MAAAiC,OAAAd,UAAAe,aAAA,SAAAC,GAEAA,EAAAlB,kBAAAP,KAAA0B,eAEAJ,EAAAtB,KAAA2B,QACA3B,KAAA2B,QAAA3B,KAAA0B,cAEAD,EAAAG,kBAAAH,EAAAI,QAAAC,QACAL,EAAAI,QAAAC,OAAApB,OAAAV,MAEAA,KAAA2B,QAAAL,IAIAG,EAAAG,kBAAAH,EAAAI,QAAAC,QACAL,EAAAI,QAAAC,OAAApB,OAAAV,kBFkGW","file":"pixi-lights.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = PIXI.lighting = {\r\n//    LitSprite: require('./light_1/LitSprite'),\r\n//    LightingRenderer: require('./light_1/webgl/LightingRenderer')\r\n    WebGLDeferredRenderer: require('./light_2/WebGLDeferredRenderer')\r\n};\r\n\r\nrequire('./light_2/lightSpriteMixin');\r\n",null,"/**\r\n * The WebGLDeferredRenderer draws the scene and all its content onto a webGL enabled canvas. This renderer\r\n * should be used for browsers that support webGL. This Render works by automatically managing webGLBatchs.\r\n * So no need for Sprite Batches or Sprite Clouds.\r\n * Don't forget to add the view to your DOM or you will not see anything :)\r\n *\r\n * @class\r\n * @memberof PIXI\r\n * @extends PIXI.SystemRenderer\r\n * @param [width=0] {number} the width of the canvas view\r\n * @param [height=0] {number} the height of the canvas view\r\n * @param [options] {object} The optional renderer parameters\r\n * @param [options.view] {HTMLCanvasElement} the canvas to use as a view, optional\r\n * @param [options.transparent=false] {boolean} If the render view is transparent, default false\r\n * @param [options.autoResize=false] {boolean} If the render view is automatically resized, default false\r\n * @param [options.antialias=false] {boolean} sets antialias. If not available natively then FXAA antialiasing is used\r\n * @param [options.forceFXAA=false] {boolean} forces FXAA antialiasing to be used over native. FXAA is faster, but may not always lok as great\r\n * @param [options.resolution=1] {number} the resolution of the renderer retina would be 2\r\n * @param [options.clearBeforeRender=true] {boolean} This sets if the CanvasRenderer will clear the canvas or\r\n *      not before the new render pass.\r\n * @param [options.preserveDrawingBuffer=false] {boolean} enables drawing buffer preservation, enable this if\r\n *      you need to call toDataUrl on the webgl context.\r\n */\r\nfunction WebGLDeferredRenderer(width, height, options)\r\n{\r\n    PIXI.WebGLRenderer.call(this, width, height, options);\r\n \r\n    this.viewportRenderTarget = this.renderTarget;\r\n\r\n    this.diffuseRenderTarget = null;\r\n    this.normalsRenderTarget = null;\r\n    this.lightsRenderTarget = null;\r\n\r\n    this.lights = [];\r\n\r\n    this.renderingNormals = false;\r\n\r\n    this._doWebGLRender = PIXI.WebGLRenderer.prototype.render;\r\n}\r\n\r\nWebGLDeferredRenderer.prototype = Object.create(PIXI.WebGLRenderer.prototype);\r\nWebGLDeferredRenderer.prototype.constructor = WebGLDeferredRenderer;\r\n\r\nmodule.exports = WebGLDeferredRenderer;\r\n\r\n/** @lends PIXI.DisplayObject# */\r\nObject.assign(WebGLDeferredRenderer.prototype, {\r\n    /**\r\n     * Initializes the context and necessary framebuffers.\r\n     */\r\n    _initContext: function ()\r\n    {\r\n        PIXI.WebGLRenderer.prototype._initContext.call(this);\r\n\r\n        this.diffuseRenderTarget = new PIXI.RenderTarget(this.gl, this.width, this.height, null, this.resolution, false);\r\n        this.normalsRenderTarget = new PIXI.RenderTarget(this.gl, this.width, this.height, null, this.resolution, false);\r\n        this.lightsRenderTarget  = new PIXI.RenderTarget(this.gl, this.width, this.height, null, this.resolution, false);\r\n    },\r\n\r\n    render: function (object)\r\n    {\r\n        // render diffuse\r\n//        this.renderingNormals = false;\r\n//        this.renderTarget = this.diffuseRenderTarget;\r\n//        this._doWebGLRender(object);\r\n\r\n        // render normals\r\n        this.renderingNormals = true;\r\n//        this.renderTarget = this.normalsRenderTarget;\r\n        this._doWebGLRender(object);\r\n\r\n        // render lights\r\n//        this._renderLights();\r\n\r\n        // composite to viewport\r\n//        this._composite();\r\n    },\r\n\r\n    _renderLights: function () {\r\n        \r\n    }\r\n});\r\n","var tempTexture = null;\r\n\r\n /**\r\n * Renders the object using the WebGL renderer\r\n *\r\n * @param renderer {WebGLRenderer}\r\n * @private\r\n */\r\nPIXI.Sprite.prototype._renderWebGL = function (renderer)\r\n{\r\n    if (renderer.renderingNormals && this.normalTexture)\r\n    {\r\n        tempTexture = this.texture;\r\n        this.texture = this.normalTexture;\r\n\r\n        renderer.setObjectRenderer(renderer.plugins.sprite);\r\n        renderer.plugins.sprite.render(this);\r\n\r\n        this.texture = tempTexture;\r\n    }\r\n    else\r\n    {\r\n        renderer.setObjectRenderer(renderer.plugins.sprite);\r\n        renderer.plugins.sprite.render(this);\r\n    }\r\n};\r\n"],"sourceRoot":"./"}