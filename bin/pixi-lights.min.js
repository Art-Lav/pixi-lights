!function e(t,r,i){function n(s,h){if(!r[s]){if(!t[s]){var l="function"==typeof require&&require;if(!h&&l)return l(s,!0);if(o)return o(s,!0);var a=new Error("Cannot find module '"+s+"'");throw a.code="MODULE_NOT_FOUND",a}var u=r[s]={exports:{}};t[s][0].call(u.exports,function(e){var r=t[s][1][e];return n(r?r:e)},u,u.exports,e,t,r,i)}return r[s].exports}for(var o="function"==typeof require&&require,s=0;s<i.length;s++)n(i[s]);return n}({1:[function(e,t,r){t.exports=PIXI.lights={Light:e("./light_2/lights/Light"),LightShader:e("./light_2/lights/LightShader"),PointLight:e("./light_2/lights/point/PointLight"),PointLightShader:e("./light_2/lights/point/PointLightShader"),LightRenderer:e("./light_2/renderers/LightRenderer"),WebGLDeferredRenderer:e("./light_2/renderers/WebGLDeferredRenderer")},e("./light_2/lightSpriteMixin")},{"./light_2/lightSpriteMixin":2,"./light_2/lights/Light":3,"./light_2/lights/LightShader":4,"./light_2/lights/point/PointLight":5,"./light_2/lights/point/PointLightShader":6,"./light_2/renderers/LightRenderer":7,"./light_2/renderers/WebGLDeferredRenderer":8}],2:[function(e,t,r){PIXI.Sprite.prototype._renderWebGL=function(e){this._originalTexture||(this._originalTexture=this._texture),this._texture=e.renderingNormals&&this.normalTexture?this.normalTexture:this._originalTexture,e.setObjectRenderer(e.plugins.sprite),e.plugins.sprite.render(this)}},{}],3:[function(e,t,r){function i(e){PIXI.DisplayObject.call(this),this._color=16777215,this._colorRgba=[0,0,0,1],this.color=void 0!==e?e:this._color,this.height=1,this.falloff=[.4,7,40],this.children=[],this.shaderName=null}i.prototype=Object.create(PIXI.DisplayObject.prototype),i.prototype.constructor=i,t.exports=i,Object.defineProperties(i.prototype,{color:{get:function(){return this._color},set:function(e){this._color=e,PIXI.utils.hex2rgb(e,this._colorRgba)}}}),i.prototype.renderWebGL=function(e){e.renderingNormals&&e.plugins.lights.render(this)}},{}],4:[function(e,t,r){function i(e,t,r,i,n){var o={projectionMatrix:{type:"mat3",value:new Float32Array([1,0,0,0,1,0,0,0,1])},uSampler:{type:"sampler2D",value:null},uNormalSampler:{type:"sampler2D",value:null},uViewSize:{type:"2f",value:[0,0]},uAmbientColor:{type:"4f",value:e.renderer._lightAmbientColorRgba}};if(i)for(var s in i)o[s]=i[s];var h={aVertexPosition:0};if(n)for(var l in n)h[l]=n[l];PIXI.Shader.call(this,e,t,r,o,h)}i.prototype=Object.create(PIXI.Shader.prototype),i.prototype.constructor=i,t.exports=i},{}],5:[function(e,t,r){function i(e,t,r,i){n.call(this,e),this.shaderName="pointLightShader"}var n=e("../Light");i.prototype=Object.create(n.prototype),i.prototype.constructor=i,t.exports=i},{"../Light":3}],6:[function(e,t,r){function i(e){n.call(this,e,"#define GLSLIFY 1\n\nprecision lowp float;\r\n\r\nattribute vec2 aVertexPosition;\r\nattribute vec4 aLightColor;\r\nattribute vec3 aLightPosition;\r\nattribute vec3 aLightFalloff;\r\n\r\nuniform mat3 projectionMatrix;\r\n\r\nvarying vec4 vLightColor;\r\nvarying vec3 vLightPosition;\r\nvarying vec3 vLightFalloff;\r\n\r\nvoid main(void) {\r\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n\r\n    vLightColor = aLightColor;\r\n    vLightPosition = aLightPosition;\r\n    vLightFalloff = aLightFalloff;\r\n}\r\n","#define GLSLIFY 1\n\nprecision lowp float;\r\n\r\n// imports the common uniforms like samplers, and ambient color\r\nuniform sampler2D uSampler;\r\nuniform sampler2D uNormalSampler;\r\n\r\nuniform vec2 uViewSize;\r\n\r\nuniform vec4 uAmbientColor; // ambient color, alpha channel used for intensity.\r\n\n\r\nvarying vec4 vLightColor;   // light color, alpha channel used for intensity.\r\nvarying vec3 vLightPosition;// light position normalized to view size (position / viewport)\r\nvarying vec3 vLightFalloff; // light falloff attenuation coefficients\r\n\r\nvoid main()\r\n{\r\n// sets diffuseColor and normalColor from their respective textures\r\nvec2 textureCoord = gl_FragCoord.xy / uViewSize;\r\n\r\nvec4 diffuseColor = texture2D(uSampler, textureCoord);\r\nvec4 normalColor = texture2D(uNormalSampler, textureCoord);\r\n\r\n// if no normal color here, just discard\r\nif (normalColor.a == 0.0) discard;\r\n\n\r\n    gl_FragColor = diffuseColor;\r\n}",null,{aLightColor:1,aLightPosition:2,aLightFalloff:3})}var n=e("../LightShader");i.prototype=Object.create(n.prototype),i.prototype.constructor=i,t.exports=i,PIXI.ShaderManager.registerPlugin("pointLightShader",i)},{"../LightShader":4}],7:[function(e,t,r){function i(e){PIXI.ObjectRenderer.call(this,e),this.vertSize=12,this.vertByteSize=4*this.vertSize,this.size=i.MAX_LIGHTS;var t=4*this.size*this.vertByteSize,r=6*this.size;this.vertices=new ArrayBuffer(t),this.positions=new Float32Array(this.vertices),this.colors=new Uint32Array(this.vertices),this.indices=new Uint16Array(r);for(var n=0,o=0;r>n;n+=6,o+=4)this.indices[n+0]=o+0,this.indices[n+1]=o+1,this.indices[n+2]=o+2,this.indices[n+3]=o+0,this.indices[n+4]=o+2,this.indices[n+5]=o+3;this.currentBatchSize=0,this.lights=[],this.vertexBuffer=null,this.vertexBuffer=null}i.MAX_LIGHTS=500,i.prototype=Object.create(PIXI.ObjectRenderer.prototype),i.prototype.constructor=i,t.exports=i,PIXI.WebGLRenderer.registerPlugin("lights",i),i.prototype.onContextChange=function(){var e=this.renderer.gl;this.vertexBuffer=e.createBuffer(),this.indexBuffer=e.createBuffer(),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,this.indices,e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,this.vertices,e.DYNAMIC_DRAW)},i.prototype.render=function(e){this.currentBatchSize>=this.size&&this.flush();var t=this.currentBatchSize*this.vertByteSize,r=e.worldTransform,i=r.a,n=r.b,o=r.c,s=r.d,h=r.tx,l=r.ty,a=this.positions,u=this.colors;this.renderer.roundPixels?(a[t+0]=a[t+12]=a[t+24]=a[t+36]=i+o+h|0,a[t+1]=a[t+13]=a[t+25]=a[t+37]=s+n+l|0):(a[t+0]=a[t+12]=a[t+24]=a[t+36]=i+o+h,a[t+1]=a[t+13]=a[t+25]=a[t+37]=s+n+l),u[t+2]=u[t+14]=u[t+26]=u[t+38]=e._colorRgba[0],u[t+3]=u[t+15]=u[t+27]=u[t+39]=e._colorRgba[1],u[t+4]=u[t+16]=u[t+28]=u[t+40]=e._colorRgba[2],u[t+5]=u[t+17]=u[t+29]=u[t+41]=e._colorRgba[3],a[t+6]=a[t+18]=a[t+30]=a[t+42]=a[t],a[t+7]=a[t+19]=a[t+31]=a[t+43]=a[t+1],a[t+8]=a[t+20]=a[t+32]=a[t+44]=this.renderer.roundPixels?0|e.height:e.height,a[t+9]=a[t+21]=a[t+33]=a[t+45]=e.falloff[0],a[t+10]=a[t+22]=a[t+34]=a[t+46]=e.falloff[1],a[t+11]=a[t+23]=a[t+35]=a[t+47]=e.falloff[2],this.lights[this.currentBatchSize++]=e},i.prototype.flush=function(){if(0!==this.currentBatchSize){var e,t=this.renderer.gl;t.bufferSubData(t.ARRAY_BUFFER,0,this.vertices);for(var r,i,n=0,o=0,s=null,h=0,l=this.currentBatchSize;l>h;++h)i=this.lights[h],r=i.shader||this.renderer.shaderManager.plugins[i.shaderName],s!==r&&(this.renderBatch(n,o),o=h,n=0,s=r,e=s.shaders?s.shaders[t.id]:s,this.renderer.shaderManager.setShader(e),e.uniforms.projectionMatrix.value=this.renderer.currentRenderTarget.projectionMatrix.toArray(!0),e.uniforms.uSampler.value=this.renderer.diffuseTexture,e.uniforms.uNormalSampler.value=this.renderer.normalTexture,e.uniforms.uViewSize.value[0]=this.renderer.width,e.uniforms.uViewSize.value[1]=this.renderer.height,e.syncUniforms(),t.activeTexture(t.TEXTURE0)),n++;this.renderBatch(n,o),this.currentBatchSize=0}},i.prototype.renderBatch=function(e,t){if(0!==e){var r=this.renderer.gl;r.drawElements(r.TRIANGLES,6*e,r.UNSIGNED_SHORT,6*t*2),this.renderer.drawCount++}},i.prototype.start=function(){var e=this.renderer.gl;e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer);var t=this.renderer.shaderManager.plugins.pointLightShader,r=this.vertByteSize;e.vertexAttribPointer(t.attributes.aVertexPosition,2,e.FLOAT,!1,r,0),e.vertexAttribPointer(t.attributes.aLightColor,4,e.UNSIGNED_BYTE,!0,r,8),e.vertexAttribPointer(t.attributes.aLightPosition,3,e.FLOAT,!1,r,24),e.vertexAttribPointer(t.attributes.aLightFalloff,3,e.FLOAT,!1,r,36)},i.prototype.destroy=function(){this.renderer.gl.deleteBuffer(this.vertexBuffer),this.renderer.gl.deleteBuffer(this.indexBuffer),this.renderer=null,this.vertices=null,this.positions=null,this.indices=null,this.vertexBuffer=null,this.indexBuffer=null,this.lights=null}},{}],8:[function(e,t,r){function i(e,t,r){r=r||{},this._lightAmbientColor=0,this._lightAmbientColorRgba=[0,0,0,0],this.ambientColor=r.ambientColor||this._lightAmbientColor,this.ambientIntensity=r.ambientIntensity||this._lightAmbientColorRgba[3],this.lights=[],this.renderingNormals=!1,this._doWebGLRender=PIXI.WebGLRenderer.prototype.render,PIXI.WebGLRenderer.call(this,e,t,r)}i.prototype=Object.create(PIXI.WebGLRenderer.prototype),i.prototype.constructor=i,t.exports=i,Object.defineProperties(i.prototype,{ambientColor:{get:function(){return this._lightAmbientColor},set:function(e){this._lightAmbientColor=e,PIXI.utils.hex2rgb(e,this._lightAmbientColorRgba)}},ambientIntensity:{get:function(){return this._lightAmbientColorRgba[3]},set:function(e){this._lightAmbientColorRgba[3]=e}}}),Object.assign(i.prototype,{_initContext:function(){PIXI.WebGLRenderer.prototype._initContext.call(this),this.diffuseTexture=new PIXI.RenderTexture(this,this.width,this.height,null,this.resolution),this.normalsTexture=new PIXI.RenderTexture(this,this.width,this.height,null,this.resolution),this.renderTarget.activate()},render:function(e){this.renderingNormals=!1,this.diffuseTexture.render(e),this.renderingNormals=!0,this.normalsTexture.render(e),this.setRenderTarget(this.renderTarget),this.setObjectRenderer(this.plugins.lights),this.plugins.lights.flush()},_renderLights:function(){},_updateLight:function(){}})},{}]},{},[1]);